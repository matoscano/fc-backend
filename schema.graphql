scalar DateTime

type Query {
  getAllMovies: [Movie!]!
  getAllShareholders: [Shareholder!]!
  getAllTransferByMovie(movieId: ID!): [Transfer!]!
  getAllShareholdersByMovie(movieId: ID!): [Shareholder!]!
  deleteAll: String
}

type Mutation {
  createMovie(title: String!): Movie!
  createShareholder(
    firstName: String
    lastName: String
    address: String
    iban: String
    movieId: ID!
  ): Shareholder!
  createTransfer(amount: Float!, description: String, movieId: ID!): Transfer!
}

type Movie {
  id: ID!
  createAt: DateTime!
  title: String!
}

type Shareholder {
  id: ID!
  createAt: DateTime!
  firstName: String
  lastName: String
  address: String
  iban: String
  Movie: Movie
  BalanceTransaction: [BalanceTransaction!]!
}

type Transfer {
  id: ID!
  createAt: DateTime!
  Movie: Movie
  amount: Float!
  description: String
}

type BalanceTransaction {
  id: ID!
  createAt: DateTime!
  transfer: Transfer!
  amount: Float!
}
